services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: miko_web
    command: npm run dev
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_MIKO_ADDRESS=${NEXT_PUBLIC_MIKO_ADDRESS:-0xADMINPLACEHOLDER}
      - NEXT_PUBLIC_API_ORIGIN=http://localhost:5001
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    depends_on:
      - backend
      - ai-service

  backend:
    build: ./backend
    container_name: miko_api
    environment:
      - PORT=5001
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_NAME=${DATABASE_NAME:-miko}
      - CLIENT_ORIGIN=http://localhost:3000
      - JWT_SECRET=dev_secret_change_me
      - JWT_EXPIRES=1d
      - OTP_LENGTH=6
      - OTP_TTL_MS=300000
      - WALLET_MESSAGE_PREFIX=Miko Auth
      # Resend email (provide these via your local shell env or replace inline)
      - RESEND_API_KEY=${RESEND_API_KEY}
      - EMAIL_FROM=${EMAIL_FROM:-onboarding@resend.dev}
      - RESEND_SANDBOX_FALLBACK=true
      - AI_BASE_URL=http://miko_ai:8000
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app
    command: sh -c "npm install --no-audit --no-fund && node src/index.js"
    restart: unless-stopped

  ai-service:
    build: ./ai-service
    container_name: miko_ai
    environment:
      - MONGO_URI=${DATABASE_URL}
      - MONGO_DB=${DATABASE_NAME:-miko}
      - MONGO_COLLECTION=trees
      - RADIUS_METERS=20
      - PHASH_MAX_HAMMING=5
      - VECTOR_MIN_COSINE=0.95
      - TREE_CONFIDENCE_MIN=0.5
    ports:
      - "8000:8000"
    restart: unless-stopped
